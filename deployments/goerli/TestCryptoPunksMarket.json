{
  "address": "0xF821f713C8eF99fB27506eDf683375cc2b5c5dA8",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "Assign",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromAddress",
          "type": "address"
        }
      ],
      "name": "PunkBidEntered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromAddress",
          "type": "address"
        }
      ],
      "name": "PunkBidWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toAddress",
          "type": "address"
        }
      ],
      "name": "PunkBought",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "PunkNoLongerForSale",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minValue",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toAddress",
          "type": "address"
        }
      ],
      "name": "PunkOffered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "PunkTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minPrice",
          "type": "uint256"
        }
      ],
      "name": "acceptBidForPunk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allInitialOwnersAssigned",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allPunksAssigned",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "buyPunk",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "enterBidForPunk",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "getPunk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "imageHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextPunkIndexToAssign",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minSalePriceInWei",
          "type": "uint256"
        }
      ],
      "name": "offerPunkForSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minSalePriceInWei",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "toAddress",
          "type": "address"
        }
      ],
      "name": "offerPunkForSaleToAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pendingWithdrawals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "punkBids",
      "outputs": [
        {
          "internalType": "bool",
          "name": "hasBid",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "punkIndexToAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "punkNoLongerForSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "punksOfferedForSale",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isForSale",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minValue",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "onlySellTo",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "punksRemainingToAssign",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "setInitialOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "indices",
          "type": "uint256[]"
        }
      ],
      "name": "setInitialOwners",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "standard",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "transferPunk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "withdrawBidForPunk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x25f3757da30665eb2d0cfd341a595a80f2eba86de2ccfd4737965ff0bc70d02e",
  "receipt": {
    "to": null,
    "from": "0x9675e17451FEB900280FC84D2eE44D114f629C96",
    "contractAddress": "0xF821f713C8eF99fB27506eDf683375cc2b5c5dA8",
    "transactionIndex": 55,
    "gasUsed": "1725840",
    "logsBloom": "0x
    "blockHash": "0xc9734535f5a0be65a0a46df9cb3eea7c9eee4732dccb3ef8f04d70270b30cb4d",
    "transactionHash": "0x25f3757da30665eb2d0cfd341a595a80f2eba86de2ccfd4737965ff0bc70d02e",
    "logs": [],
    "blockNumber": 8910667,
    "cumulativeGasUsed": "12635591",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 3,
  "solcInputHash": "2b66f9358e71e7db85ad3cd9be00e18c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"Assign\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"}],\"name\":\"PunkBidEntered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"}],\"name\":\"PunkBidWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"}],\"name\":\"PunkBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"PunkNoLongerForSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minValue\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"}],\"name\":\"PunkOffered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"PunkTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"}],\"name\":\"acceptBidForPunk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allInitialOwnersAssigned\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPunksAssigned\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"buyPunk\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"enterBidForPunk\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"getPunk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"imageHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextPunkIndexToAssign\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minSalePriceInWei\",\"type\":\"uint256\"}],\"name\":\"offerPunkForSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minSalePriceInWei\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"}],\"name\":\"offerPunkForSaleToAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingWithdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"punkBids\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasBid\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"punkIndexToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"punkNoLongerForSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"punksOfferedForSale\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isForSale\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minValue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onlySellTo\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"punksRemainingToAssign\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"setInitialOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"indices\",\"type\":\"uint256[]\"}],\"name\":\"setInitialOwners\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"transferPunk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"withdrawBidForPunk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/external/CryptoPunksMarket.sol\":\"CryptoPunksMarket\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363832373533353639383933\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":160},\"remappings\":[]},\"sources\":{\"src/external/CryptoPunksMarket.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.17;\\n\\n// Modified original CryptoPunksMarket with recent solidity code style\\ncontract CryptoPunksMarket {\\n    // You can use this hash to verify the image file containing all the punks\\n    string public imageHash =\\n        \\\"ac39af4793119ee46bbff351d8cb6b5f23da60222126add4268e261199a2921b\\\";\\n\\n    address owner;\\n\\n    string public standard = \\\"CryptoPunks\\\";\\n    string public name;\\n    string public symbol;\\n    uint8 public decimals;\\n    uint256 public totalSupply;\\n\\n    uint public nextPunkIndexToAssign = 0;\\n\\n    bool public allPunksAssigned = false;\\n    uint public punksRemainingToAssign = 0;\\n\\n    //mapping (address => uint) public addressToPunkIndex;\\n    mapping(uint => address) public punkIndexToAddress;\\n\\n    /* This creates an array with all balances */\\n    mapping(address => uint256) public balanceOf;\\n\\n    struct Offer {\\n        bool isForSale;\\n        uint punkIndex;\\n        address seller;\\n        uint minValue; // in ether\\n        address onlySellTo; // specify to sell only to a specific person\\n    }\\n\\n    struct Bid {\\n        bool hasBid;\\n        uint punkIndex;\\n        address bidder;\\n        uint value;\\n    }\\n\\n    // A record of punks that are offered for sale at a specific minimum value, and perhaps to a specific person\\n    mapping(uint => Offer) public punksOfferedForSale;\\n\\n    // A record of the highest punk bid\\n    mapping(uint => Bid) public punkBids;\\n\\n    mapping(address => uint) public pendingWithdrawals;\\n\\n    event Assign(address indexed to, uint256 punkIndex);\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event PunkTransfer(\\n        address indexed from,\\n        address indexed to,\\n        uint256 punkIndex\\n    );\\n    event PunkOffered(\\n        uint indexed punkIndex,\\n        uint minValue,\\n        address indexed toAddress\\n    );\\n    event PunkBidEntered(\\n        uint indexed punkIndex,\\n        uint value,\\n        address indexed fromAddress\\n    );\\n    event PunkBidWithdrawn(\\n        uint indexed punkIndex,\\n        uint value,\\n        address indexed fromAddress\\n    );\\n    event PunkBought(\\n        uint indexed punkIndex,\\n        uint value,\\n        address indexed fromAddress,\\n        address indexed toAddress\\n    );\\n    event PunkNoLongerForSale(uint indexed punkIndex);\\n\\n    /* Initializes contract with initial supply tokens to the creator of the contract */\\n    constructor() payable {\\n        // Give the creator all initial tokens\\n        // balanceOf[msg.sender] = initialSupply;\\n        owner = msg.sender;\\n        // Update total supply\\n        totalSupply = 10000;\\n        punksRemainingToAssign = totalSupply;\\n        // Set the name for display purposes\\n        name = \\\"CRYPTOPUNKS\\\";\\n        // Set the symbol for display purposes\\n        symbol = unicode\\\"\\u03fe\\\";\\n        // Amount of decimals for display purposes\\n        decimals = 0;\\n    }\\n\\n    function setInitialOwner(address to, uint punkIndex) public {\\n        if (msg.sender != owner) revert();\\n        if (allPunksAssigned) revert();\\n        if (punkIndex >= 10000) revert();\\n        if (punkIndexToAddress[punkIndex] != to) {\\n            if (punkIndexToAddress[punkIndex] != address(0x0)) {\\n                balanceOf[punkIndexToAddress[punkIndex]]--;\\n            } else {\\n                punksRemainingToAssign--;\\n            }\\n            punkIndexToAddress[punkIndex] = to;\\n            balanceOf[to]++;\\n            emit Assign(to, punkIndex);\\n        }\\n    }\\n\\n    function setInitialOwners(\\n        address[] calldata addresses,\\n        uint[] calldata indices\\n    ) public {\\n        if (msg.sender != owner) revert();\\n        uint n = addresses.length;\\n        for (uint i = 0; i < n; i++) {\\n            setInitialOwner(addresses[i], indices[i]);\\n        }\\n    }\\n\\n    function allInitialOwnersAssigned() public {\\n        if (msg.sender != owner) revert();\\n        allPunksAssigned = true;\\n    }\\n\\n    function getPunk(uint punkIndex) public {\\n        if (!allPunksAssigned) revert();\\n        if (punksRemainingToAssign == 0) revert();\\n        if (punkIndexToAddress[punkIndex] != address(0x0)) revert();\\n        if (punkIndex >= 10000) revert();\\n        punkIndexToAddress[punkIndex] = msg.sender;\\n        balanceOf[msg.sender]++;\\n        punksRemainingToAssign--;\\n        emit Assign(msg.sender, punkIndex);\\n    }\\n\\n    // Transfer ownership of a punk to another user without requiring payment\\n    function transferPunk(address to, uint punkIndex) public {\\n        if (!allPunksAssigned) revert();\\n        if (punkIndexToAddress[punkIndex] != msg.sender) revert();\\n        if (punkIndex >= 10000) revert();\\n        if (punksOfferedForSale[punkIndex].isForSale) {\\n            punkNoLongerForSale(punkIndex);\\n        }\\n        punkIndexToAddress[punkIndex] = to;\\n        balanceOf[msg.sender]--;\\n        balanceOf[to]++;\\n        emit Transfer(msg.sender, to, 1);\\n        emit PunkTransfer(msg.sender, to, punkIndex);\\n        // Check for the case where there is a bid from the new owner and refund it.\\n        // Any other bid can stay in place.\\n        Bid storage bid = punkBids[punkIndex];\\n        if (bid.bidder == to) {\\n            // Kill bid and refund value\\n            pendingWithdrawals[to] += bid.value;\\n            punkBids[punkIndex] = Bid(false, punkIndex, address(0x0), 0);\\n        }\\n    }\\n\\n    function punkNoLongerForSale(uint punkIndex) public {\\n        if (!allPunksAssigned) revert();\\n        if (punkIndexToAddress[punkIndex] != msg.sender) revert();\\n        if (punkIndex >= 10000) revert();\\n        punksOfferedForSale[punkIndex] = Offer(\\n            false,\\n            punkIndex,\\n            msg.sender,\\n            0,\\n            address(0x0)\\n        );\\n        emit PunkNoLongerForSale(punkIndex);\\n    }\\n\\n    function offerPunkForSale(uint punkIndex, uint minSalePriceInWei) public {\\n        if (!allPunksAssigned) revert();\\n        if (punkIndexToAddress[punkIndex] != msg.sender) revert();\\n        if (punkIndex >= 10000) revert();\\n        punksOfferedForSale[punkIndex] = Offer(\\n            true,\\n            punkIndex,\\n            msg.sender,\\n            minSalePriceInWei,\\n            address(0x0)\\n        );\\n        emit PunkOffered(punkIndex, minSalePriceInWei, address(0x0));\\n    }\\n\\n    function offerPunkForSaleToAddress(\\n        uint punkIndex,\\n        uint minSalePriceInWei,\\n        address toAddress\\n    ) public {\\n        if (!allPunksAssigned) revert();\\n        if (punkIndexToAddress[punkIndex] != msg.sender) revert();\\n        if (punkIndex >= 10000) revert();\\n        punksOfferedForSale[punkIndex] = Offer(\\n            true,\\n            punkIndex,\\n            msg.sender,\\n            minSalePriceInWei,\\n            toAddress\\n        );\\n        emit PunkOffered(punkIndex, minSalePriceInWei, toAddress);\\n    }\\n\\n    function buyPunk(uint punkIndex) public payable {\\n        if (!allPunksAssigned) revert();\\n        Offer storage offer = punksOfferedForSale[punkIndex];\\n        if (punkIndex >= 10000) revert();\\n        if (!offer.isForSale) revert();\\n        // punk not actually for sale\\n        if (offer.onlySellTo != address(0x0) && offer.onlySellTo != msg.sender)\\n            revert();\\n        // punk not supposed to be sold to this user\\n        if (msg.value < offer.minValue) revert();\\n        // Didn't send enough ETH\\n        if (offer.seller != punkIndexToAddress[punkIndex]) revert();\\n        // Seller no longer owner of punk\\n\\n        address seller = offer.seller;\\n\\n        punkIndexToAddress[punkIndex] = msg.sender;\\n        balanceOf[seller]--;\\n        balanceOf[msg.sender]++;\\n        emit Transfer(seller, msg.sender, 1);\\n\\n        punkNoLongerForSale(punkIndex);\\n        pendingWithdrawals[seller] += msg.value;\\n        emit PunkBought(punkIndex, msg.value, seller, msg.sender);\\n\\n        // Check for the case where there is a bid from the new owner and refund it.\\n        // Any other bid can stay in place.\\n        Bid storage bid = punkBids[punkIndex];\\n        if (bid.bidder == msg.sender) {\\n            // Kill bid and refund value\\n            pendingWithdrawals[msg.sender] += bid.value;\\n            punkBids[punkIndex] = Bid(false, punkIndex, address(0x0), 0);\\n        }\\n    }\\n\\n    function withdraw() public {\\n        if (!allPunksAssigned) revert();\\n        uint amount = pendingWithdrawals[msg.sender];\\n        // Remember to zero the pending refund before\\n        // sending to prevent re-entrancy attacks\\n        pendingWithdrawals[msg.sender] = 0;\\n        payable(msg.sender).transfer(amount);\\n    }\\n\\n    function enterBidForPunk(uint punkIndex) public payable {\\n        if (punkIndex >= 10000) revert();\\n        if (!allPunksAssigned) revert();\\n        if (punkIndexToAddress[punkIndex] == address(0x0)) revert();\\n        if (punkIndexToAddress[punkIndex] == msg.sender) revert();\\n        if (msg.value == 0) revert();\\n        Bid storage existing = punkBids[punkIndex];\\n        if (msg.value <= existing.value) revert();\\n        if (existing.value > 0) {\\n            // Refund the failing bid\\n            pendingWithdrawals[existing.bidder] += existing.value;\\n        }\\n        punkBids[punkIndex] = Bid(true, punkIndex, msg.sender, msg.value);\\n        emit PunkBidEntered(punkIndex, msg.value, msg.sender);\\n    }\\n\\n    function acceptBidForPunk(uint punkIndex, uint minPrice) public {\\n        if (punkIndex >= 10000) revert();\\n        if (!allPunksAssigned) revert();\\n        if (punkIndexToAddress[punkIndex] != msg.sender) revert();\\n        address seller = msg.sender;\\n        Bid storage bid = punkBids[punkIndex];\\n        if (bid.value == 0) revert();\\n        if (bid.value < minPrice) revert();\\n\\n        punkIndexToAddress[punkIndex] = bid.bidder;\\n        balanceOf[seller]--;\\n        balanceOf[bid.bidder]++;\\n        emit Transfer(seller, bid.bidder, 1);\\n\\n        punksOfferedForSale[punkIndex] = Offer(\\n            false,\\n            punkIndex,\\n            bid.bidder,\\n            0,\\n            address(0x0)\\n        );\\n        uint amount = bid.value;\\n        punkBids[punkIndex] = Bid(false, punkIndex, address(0x0), 0);\\n        pendingWithdrawals[seller] += amount;\\n        emit PunkBought(punkIndex, bid.value, seller, bid.bidder);\\n    }\\n\\n    function withdrawBidForPunk(uint punkIndex) public {\\n        if (punkIndex >= 10000) revert();\\n        if (!allPunksAssigned) revert();\\n        if (punkIndexToAddress[punkIndex] == address(0x0)) revert();\\n        if (punkIndexToAddress[punkIndex] == msg.sender) revert();\\n        Bid storage bid = punkBids[punkIndex];\\n        if (bid.bidder != msg.sender) revert();\\n        emit PunkBidWithdrawn(punkIndex, bid.value, msg.sender);\\n        uint amount = bid.value;\\n        punkBids[punkIndex] = Bid(false, punkIndex, address(0x0), 0);\\n        // Refund the bid money\\n        payable(msg.sender).transfer(amount);\\n    }\\n}\\n\",\"keccak256\":\"0x767a3c0cba636d58f68b6b72ce5ffa152b75a61f38217e160ddc7e55ba5d152c\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60e0604090815260808181529062001cbf60a03960009062000022908262000191565b5060408051808201909152600b81526a43727970746f50756e6b7360a81b602082015260029062000054908262000191565b5060006007556008805460ff19169055600180546001600160a01b03191633179055612710600681905560095560408051808201909152600b81526a43525950544f50554e4b5360a81b6020820152600390620000b2908262000191565b5060408051808201909152600281526167df60f11b6020820152600490620000db908262000191565b506005805460ff191690556200025d565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011757607f821691505b6020821081036200013857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018c57600081815260208120601f850160051c81016020861015620001675750805b601f850160051c820191505b81811015620001885782815560010162000173565b5050505b505050565b81516001600160401b03811115620001ad57620001ad620000ec565b620001c581620001be845462000102565b846200013e565b602080601f831160018114620001fd5760008415620001e45750858301515b600019600386901b1c1916600185901b17855562000188565b600085815260208120601f198616915b828110156200022e578886015182559484019460019091019084016200020d565b50858210156200024d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611a52806200026d6000396000f3fe60806040526004361061016c5760003560e01c806370a08231116100cc578063a75a90491161007a578063a75a9049146104ca578063bf31196f146104ea578063c0d6ce631461050a578063c44193c314610520578063c81d1d5b14610540578063f3f4370314610560578063f6eeff1e1461058d57600080fd5b806370a08231146103f65780637ecedac9146104235780638126c38a146104385780638264fe98146104625780638b72a2ec1461047557806395d89b4114610495578063979bc638146104aa57600080fd5b806339c5dde61161012957806339c5dde6146102b05780633ccfd60b146102d057806351605d80146102e557806352f29a25146102fa57806358178168146103105780635a3b7e421461035e5780636e743fa91461037357600080fd5b806306fdde0314610171578063088f11f31461019c578063091dbfd21461022b57806318160ddd1461024057806323165b7514610264578063313ce56714610284575b600080fd5b34801561017d57600080fd5b506101866105ad565b604051610193919061178f565b60405180910390f35b3480156101a857600080fd5b506101f56101b73660046117dd565b600c602052600090815260409020805460018201546002830154600384015460049094015460ff9093169391926001600160a01b0391821692911685565b60408051951515865260208601949094526001600160a01b0392831693850193909352606084015216608082015260a001610193565b61023e6102393660046117dd565b61063b565b005b34801561024c57600080fd5b5061025660065481565b604051908152602001610193565b34801561027057600080fd5b5061023e61027f3660046117f6565b6107b9565b34801561029057600080fd5b5060055461029e9060ff1681565b60405160ff9091168152602001610193565b3480156102bc57600080fd5b5061023e6102cb366004611864565b610b22565b3480156102dc57600080fd5b5061023e610ba7565b3480156102f157600080fd5b50610186610bfb565b34801561030657600080fd5b5061025660075481565b34801561031c57600080fd5b5061034661032b3660046117dd565b600a602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610193565b34801561036a57600080fd5b50610186610c08565b34801561037f57600080fd5b506103c561038e3660046117dd565b600d60205260009081526040902080546001820154600283015460039093015460ff9092169290916001600160a01b039091169084565b6040516101939493929190931515845260208401929092526001600160a01b03166040830152606082015260800190565b34801561040257600080fd5b506102566104113660046118ec565b600b6020526000908152604090205481565b34801561042f57600080fd5b5061023e610c15565b34801561044457600080fd5b506008546104529060ff1681565b6040519015158152602001610193565b61023e6104703660046117dd565b610c3b565b34801561048157600080fd5b5061023e61049036600461190e565b610ecd565b3480156104a157600080fd5b506101866110e9565b3480156104b657600080fd5b5061023e6104c53660046117dd565b6110f6565b3480156104d657600080fd5b5061023e6104e536600461190e565b611266565b3480156104f657600080fd5b5061023e610505366004611938565b6113b7565b34801561051657600080fd5b5061025660095481565b34801561052c57600080fd5b5061023e61053b3660046117f6565b6114c1565b34801561054c57600080fd5b5061023e61055b3660046117dd565b6115c0565b34801561056c57600080fd5b5061025661057b3660046118ec565b600e6020526000908152604090205481565b34801561059957600080fd5b5061023e6105a83660046117dd565b611699565b600380546105ba9061196d565b80601f01602080910402602001604051908101604052809291908181526020018280546105e69061196d565b80156106335780601f1061060857610100808354040283529160200191610633565b820191906000526020600020905b81548152906001019060200180831161061657829003601f168201915b505050505081565b612710811061064957600080fd5b60085460ff1661065857600080fd5b6000818152600a60205260409020546001600160a01b031661067957600080fd5b6000818152600a6020526040902054336001600160a01b039091160361069e57600080fd5b346000036106ab57600080fd5b6000818152600d60205260409020600381015434116106c957600080fd5b60038101541561070a57600381015460028201546001600160a01b03166000908152600e6020526040812080549091906107049084906119bd565b90915550505b604080516080810182526001808252602080830186815233848601818152346060870181815260008b8152600d87528990209751885460ff1916901515178855935195870195909555516002860180546001600160a01b0319166001600160a01b0390921691909117905590516003909401939093559251908152909184917f5b859394fabae0c1ba88baffe67e751ab5248d2e879028b8c8d6897b0519f56a91015b60405180910390a35050565b61271082106107c757600080fd5b60085460ff166107d657600080fd5b6000828152600a60205260409020546001600160a01b031633146107f957600080fd5b6000828152600d60205260408120600381015433920361081857600080fd5b828160030154101561082957600080fd5b60028101546000858152600a6020908152604080832080546001600160a01b0319166001600160a01b039586161790559285168252600b9052908120805491610871836119d6565b909155505060028101546001600160a01b03166000908152600b6020526040812080549161089e836119ed565b90915550506002810154604051600181526001600160a01b03918216918416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36040518060a001604052806000151581526020018581526020018260020160009054906101000a90046001600160a01b03166001600160a01b031681526020016000815260200160006001600160a01b0316815250600c600086815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506060820151816003015560808201518160040160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550905050600081600301549050604051806080016040528060001515815260200186815260200160006001600160a01b031681526020016000815250600d600087815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506060820151816003015590505080600e6000856001600160a01b03166001600160a01b031681526020019081526020016000206000828254610ac891906119bd565b9091555050600282015460038301546040519081526001600160a01b039182169185169087907f58e5d5a525e3b40bc15abaa38b5882678db1ee68befd2f60bafe3a7fd06db9e39060200160405180910390a45050505050565b6001546001600160a01b03163314610b3957600080fd5b8260005b81811015610b9f57610b8d868683818110610b5a57610b5a611a06565b9050602002016020810190610b6f91906118ec565b858584818110610b8157610b81611a06565b90506020020135611266565b80610b97816119ed565b915050610b3d565b505050505050565b60085460ff16610bb657600080fd5b336000818152600e6020526040808220805490839055905190929183156108fc02918491818181858888f19350505050158015610bf7573d6000803e3d6000fd5b5050565b600080546105ba9061196d565b600280546105ba9061196d565b6001546001600160a01b03163314610c2c57600080fd5b6008805460ff19166001179055565b60085460ff16610c4a57600080fd5b6000818152600c602052604090206127108210610c6657600080fd5b805460ff16610c7457600080fd5b60048101546001600160a01b031615801590610c9d575060048101546001600160a01b03163314155b15610ca757600080fd5b8060030154341015610cb857600080fd5b6000828152600a602052604090205460028201546001600160a01b03908116911614610ce357600080fd5b60028101546000838152600a6020908152604080832080546001600160a01b031916331790556001600160a01b03909316808352600b909152918120805491610d2b836119d6565b9091555050336000908152600b60205260408120805491610d4b836119ed565b90915550506040516001815233906001600160a01b038316907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3610d9a83611699565b6001600160a01b0381166000908152600e602052604081208054349290610dc29084906119bd565b909155505060405134815233906001600160a01b0383169085907f58e5d5a525e3b40bc15abaa38b5882678db1ee68befd2f60bafe3a7fd06db9e39060200160405180910390a46000838152600d602052604090206002810154336001600160a01b0390911603610ec7576003810154336000908152600e602052604081208054909190610e519084906119bd565b90915550506040805160808101825260008082526020808301888152838501838152606085018481528a8552600d909352949092209251835460ff19169015151783559051600183015591516002820180546001600160a01b0319166001600160a01b0390921691909117905590516003909101555b50505050565b60085460ff16610edc57600080fd5b6000818152600a60205260409020546001600160a01b03163314610eff57600080fd5b6127108110610f0d57600080fd5b6000818152600c602052604090205460ff1615610f2d57610f2d81611699565b6000818152600a6020908152604080832080546001600160a01b0319166001600160a01b038716179055338352600b9091528120805491610f6d836119d6565b90915550506001600160a01b0382166000908152600b60205260408120805491610f96836119ed565b9091555050604051600181526001600160a01b0383169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36040518181526001600160a01b0383169033907f05af636b70da6819000c49f85b21fa82081c632069bb626f30932034099107d89060200160405180910390a36000818152600d6020526040902060028101546001600160a01b038085169116036110e45760038101546001600160a01b0384166000908152600e60205260408120805490919061106e9084906119bd565b9091555050604080516080810182526000808252602080830186815283850183815260608501848152888552600d909352949092209251835460ff19169015151783559051600183015591516002820180546001600160a01b0319166001600160a01b0390921691909117905590516003909101555b505050565b600480546105ba9061196d565b612710811061110457600080fd5b60085460ff1661111357600080fd5b6000818152600a60205260409020546001600160a01b031661113457600080fd5b6000818152600a6020526040902054336001600160a01b039091160361115957600080fd5b6000818152600d6020526040902060028101546001600160a01b0316331461118057600080fd5b336001600160a01b0316827f6f30e1ee4d81dcc7a8a478577f65d2ed2edb120565960ac45fe7c50551c8793283600301546040516111c091815260200190565b60405180910390a36003818101546040805160808101825260008082526020808301888152838501838152606085018481528a8552600d9093528584209451855460ff191690151517855590516001850155516002840180546001600160a01b0319166001600160a01b0390921691909117905551919094015551909133916108fc84150291849190818181858888f19350505050158015610ec7573d6000803e3d6000fd5b6001546001600160a01b0316331461127d57600080fd5b60085460ff161561128d57600080fd5b612710811061129b57600080fd5b6000818152600a60205260409020546001600160a01b03838116911614610bf7576000818152600a60205260409020546001600160a01b031615611313576000818152600a60209081526040808320546001600160a01b03168352600b9091528120805491611309836119d6565b9190505550611329565b60098054906000611323836119d6565b91905055505b6000818152600a6020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558352600b909152812080549161136b836119ed565b9190505550816001600160a01b03167f8a0e37b73a0d9c82e205d4d1a3ff3d0b57ce5f4d7bccf6bac03336dc101cb7ba826040516113ab91815260200190565b60405180910390a25050565b60085460ff166113c657600080fd5b6000838152600a60205260409020546001600160a01b031633146113e957600080fd5b61271083106113f757600080fd5b6040805160a0810182526001808252602080830187815233848601908152606085018881526001600160a01b038881166080880181815260008d8152600c88528a90209851895460ff191690151517895594519688019690965591516002870180546001600160a01b031990811692851692909217905590516003870155915160049095018054909216941693909317909255915184815285917f3c7b682d5da98001a9b8cbda6c647d2c63d698a4184fd1d55e2ce7b66f5d21eb910160405180910390a3505050565b60085460ff166114d057600080fd5b6000828152600a60205260409020546001600160a01b031633146114f357600080fd5b612710821061150157600080fd5b6040805160a0810182526001808252602080830186815233848601908152606085018781526000608087018181528a8252600c86528882209751885460ff191690151517885593519587019590955590516002860180546001600160a01b03199081166001600160a01b0393841617909155915160038701559151600490950180549091169490911693909317909255915183815284917f3c7b682d5da98001a9b8cbda6c647d2c63d698a4184fd1d55e2ce7b66f5d21eb91016107ad565b60085460ff166115cf57600080fd5b6009546000036115de57600080fd5b6000818152600a60205260409020546001600160a01b03161561160057600080fd5b612710811061160e57600080fd5b6000818152600a6020908152604080832080546001600160a01b031916339081179091558352600b9091528120805491611647836119ed565b90915550506009805490600061165c836119d6565b909155505060405181815233907f8a0e37b73a0d9c82e205d4d1a3ff3d0b57ce5f4d7bccf6bac03336dc101cb7ba9060200160405180910390a250565b60085460ff166116a857600080fd5b6000818152600a60205260409020546001600160a01b031633146116cb57600080fd5b61271081106116d957600080fd5b6040805160a08101825260008082526020808301858152338486019081526060850184815260808601858152888652600c9094528685209551865460ff191690151517865591516001860155516002850180546001600160a01b03199081166001600160a01b0393841617909155915160038601559151600490940180549091169390911692909217909155905182917fb0e0a660b4e50f26f0b7ce75c24655fc76cc66e3334a54ff410277229fa10bd491a250565b600060208083528351808285015260005b818110156117bc578581018301518582016040015282016117a0565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156117ef57600080fd5b5035919050565b6000806040838503121561180957600080fd5b50508035926020909101359150565b60008083601f84011261182a57600080fd5b50813567ffffffffffffffff81111561184257600080fd5b6020830191508360208260051b850101111561185d57600080fd5b9250929050565b6000806000806040858703121561187a57600080fd5b843567ffffffffffffffff8082111561189257600080fd5b61189e88838901611818565b909650945060208701359150808211156118b757600080fd5b506118c487828801611818565b95989497509550505050565b80356001600160a01b03811681146118e757600080fd5b919050565b6000602082840312156118fe57600080fd5b611907826118d0565b9392505050565b6000806040838503121561192157600080fd5b61192a836118d0565b946020939093013593505050565b60008060006060848603121561194d57600080fd5b8335925060208401359150611964604085016118d0565b90509250925092565b600181811c9082168061198157607f821691505b6020821081036119a157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156119d0576119d06119a7565b92915050565b6000816119e5576119e56119a7565b506000190190565b6000600182016119ff576119ff6119a7565b5060010190565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220fcf2e9f360ac55dd142aa300938f73e342dc44eead6c19bbf5e3cd5cb00362f264736f6c6343000811003361633339616634373933313139656534366262666633353164386362366235663233646136303232323132366164643432363865323631313939613239323162",
  "deployedBytecode": "0x60806040526004361061016c5760003560e01c806370a08231116100cc578063a75a90491161007a578063a75a9049146104ca578063bf31196f146104ea578063c0d6ce631461050a578063c44193c314610520578063c81d1d5b14610540578063f3f4370314610560578063f6eeff1e1461058d57600080fd5b806370a08231146103f65780637ecedac9146104235780638126c38a146104385780638264fe98146104625780638b72a2ec1461047557806395d89b4114610495578063979bc638146104aa57600080fd5b806339c5dde61161012957806339c5dde6146102b05780633ccfd60b146102d057806351605d80146102e557806352f29a25146102fa57806358178168146103105780635a3b7e421461035e5780636e743fa91461037357600080fd5b806306fdde0314610171578063088f11f31461019c578063091dbfd21461022b57806318160ddd1461024057806323165b7514610264578063313ce56714610284575b600080fd5b34801561017d57600080fd5b506101866105ad565b604051610193919061178f565b60405180910390f35b3480156101a857600080fd5b506101f56101b73660046117dd565b600c602052600090815260409020805460018201546002830154600384015460049094015460ff9093169391926001600160a01b0391821692911685565b60408051951515865260208601949094526001600160a01b0392831693850193909352606084015216608082015260a001610193565b61023e6102393660046117dd565b61063b565b005b34801561024c57600080fd5b5061025660065481565b604051908152602001610193565b34801561027057600080fd5b5061023e61027f3660046117f6565b6107b9565b34801561029057600080fd5b5060055461029e9060ff1681565b60405160ff9091168152602001610193565b3480156102bc57600080fd5b5061023e6102cb366004611864565b610b22565b3480156102dc57600080fd5b5061023e610ba7565b3480156102f157600080fd5b50610186610bfb565b34801561030657600080fd5b5061025660075481565b34801561031c57600080fd5b5061034661032b3660046117dd565b600a602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610193565b34801561036a57600080fd5b50610186610c08565b34801561037f57600080fd5b506103c561038e3660046117dd565b600d60205260009081526040902080546001820154600283015460039093015460ff9092169290916001600160a01b039091169084565b6040516101939493929190931515845260208401929092526001600160a01b03166040830152606082015260800190565b34801561040257600080fd5b506102566104113660046118ec565b600b6020526000908152604090205481565b34801561042f57600080fd5b5061023e610c15565b34801561044457600080fd5b506008546104529060ff1681565b6040519015158152602001610193565b61023e6104703660046117dd565b610c3b565b34801561048157600080fd5b5061023e61049036600461190e565b610ecd565b3480156104a157600080fd5b506101866110e9565b3480156104b657600080fd5b5061023e6104c53660046117dd565b6110f6565b3480156104d657600080fd5b5061023e6104e536600461190e565b611266565b3480156104f657600080fd5b5061023e610505366004611938565b6113b7565b34801561051657600080fd5b5061025660095481565b34801561052c57600080fd5b5061023e61053b3660046117f6565b6114c1565b34801561054c57600080fd5b5061023e61055b3660046117dd565b6115c0565b34801561056c57600080fd5b5061025661057b3660046118ec565b600e6020526000908152604090205481565b34801561059957600080fd5b5061023e6105a83660046117dd565b611699565b600380546105ba9061196d565b80601f01602080910402602001604051908101604052809291908181526020018280546105e69061196d565b80156106335780601f1061060857610100808354040283529160200191610633565b820191906000526020600020905b81548152906001019060200180831161061657829003601f168201915b505050505081565b612710811061064957600080fd5b60085460ff1661065857600080fd5b6000818152600a60205260409020546001600160a01b031661067957600080fd5b6000818152600a6020526040902054336001600160a01b039091160361069e57600080fd5b346000036106ab57600080fd5b6000818152600d60205260409020600381015434116106c957600080fd5b60038101541561070a57600381015460028201546001600160a01b03166000908152600e6020526040812080549091906107049084906119bd565b90915550505b604080516080810182526001808252602080830186815233848601818152346060870181815260008b8152600d87528990209751885460ff1916901515178855935195870195909555516002860180546001600160a01b0319166001600160a01b0390921691909117905590516003909401939093559251908152909184917f5b859394fabae0c1ba88baffe67e751ab5248d2e879028b8c8d6897b0519f56a91015b60405180910390a35050565b61271082106107c757600080fd5b60085460ff166107d657600080fd5b6000828152600a60205260409020546001600160a01b031633146107f957600080fd5b6000828152600d60205260408120600381015433920361081857600080fd5b828160030154101561082957600080fd5b60028101546000858152600a6020908152604080832080546001600160a01b0319166001600160a01b039586161790559285168252600b9052908120805491610871836119d6565b909155505060028101546001600160a01b03166000908152600b6020526040812080549161089e836119ed565b90915550506002810154604051600181526001600160a01b03918216918416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36040518060a001604052806000151581526020018581526020018260020160009054906101000a90046001600160a01b03166001600160a01b031681526020016000815260200160006001600160a01b0316815250600c600086815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506060820151816003015560808201518160040160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550905050600081600301549050604051806080016040528060001515815260200186815260200160006001600160a01b031681526020016000815250600d600087815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506060820151816003015590505080600e6000856001600160a01b03166001600160a01b031681526020019081526020016000206000828254610ac891906119bd565b9091555050600282015460038301546040519081526001600160a01b039182169185169087907f58e5d5a525e3b40bc15abaa38b5882678db1ee68befd2f60bafe3a7fd06db9e39060200160405180910390a45050505050565b6001546001600160a01b03163314610b3957600080fd5b8260005b81811015610b9f57610b8d868683818110610b5a57610b5a611a06565b9050602002016020810190610b6f91906118ec565b858584818110610b8157610b81611a06565b90506020020135611266565b80610b97816119ed565b915050610b3d565b505050505050565b60085460ff16610bb657600080fd5b336000818152600e6020526040808220805490839055905190929183156108fc02918491818181858888f19350505050158015610bf7573d6000803e3d6000fd5b5050565b600080546105ba9061196d565b600280546105ba9061196d565b6001546001600160a01b03163314610c2c57600080fd5b6008805460ff19166001179055565b60085460ff16610c4a57600080fd5b6000818152600c602052604090206127108210610c6657600080fd5b805460ff16610c7457600080fd5b60048101546001600160a01b031615801590610c9d575060048101546001600160a01b03163314155b15610ca757600080fd5b8060030154341015610cb857600080fd5b6000828152600a602052604090205460028201546001600160a01b03908116911614610ce357600080fd5b60028101546000838152600a6020908152604080832080546001600160a01b031916331790556001600160a01b03909316808352600b909152918120805491610d2b836119d6565b9091555050336000908152600b60205260408120805491610d4b836119ed565b90915550506040516001815233906001600160a01b038316907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3610d9a83611699565b6001600160a01b0381166000908152600e602052604081208054349290610dc29084906119bd565b909155505060405134815233906001600160a01b0383169085907f58e5d5a525e3b40bc15abaa38b5882678db1ee68befd2f60bafe3a7fd06db9e39060200160405180910390a46000838152600d602052604090206002810154336001600160a01b0390911603610ec7576003810154336000908152600e602052604081208054909190610e519084906119bd565b90915550506040805160808101825260008082526020808301888152838501838152606085018481528a8552600d909352949092209251835460ff19169015151783559051600183015591516002820180546001600160a01b0319166001600160a01b0390921691909117905590516003909101555b50505050565b60085460ff16610edc57600080fd5b6000818152600a60205260409020546001600160a01b03163314610eff57600080fd5b6127108110610f0d57600080fd5b6000818152600c602052604090205460ff1615610f2d57610f2d81611699565b6000818152600a6020908152604080832080546001600160a01b0319166001600160a01b038716179055338352600b9091528120805491610f6d836119d6565b90915550506001600160a01b0382166000908152600b60205260408120805491610f96836119ed565b9091555050604051600181526001600160a01b0383169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36040518181526001600160a01b0383169033907f05af636b70da6819000c49f85b21fa82081c632069bb626f30932034099107d89060200160405180910390a36000818152600d6020526040902060028101546001600160a01b038085169116036110e45760038101546001600160a01b0384166000908152600e60205260408120805490919061106e9084906119bd565b9091555050604080516080810182526000808252602080830186815283850183815260608501848152888552600d909352949092209251835460ff19169015151783559051600183015591516002820180546001600160a01b0319166001600160a01b0390921691909117905590516003909101555b505050565b600480546105ba9061196d565b612710811061110457600080fd5b60085460ff1661111357600080fd5b6000818152600a60205260409020546001600160a01b031661113457600080fd5b6000818152600a6020526040902054336001600160a01b039091160361115957600080fd5b6000818152600d6020526040902060028101546001600160a01b0316331461118057600080fd5b336001600160a01b0316827f6f30e1ee4d81dcc7a8a478577f65d2ed2edb120565960ac45fe7c50551c8793283600301546040516111c091815260200190565b60405180910390a36003818101546040805160808101825260008082526020808301888152838501838152606085018481528a8552600d9093528584209451855460ff191690151517855590516001850155516002840180546001600160a01b0319166001600160a01b0390921691909117905551919094015551909133916108fc84150291849190818181858888f19350505050158015610ec7573d6000803e3d6000fd5b6001546001600160a01b0316331461127d57600080fd5b60085460ff161561128d57600080fd5b612710811061129b57600080fd5b6000818152600a60205260409020546001600160a01b03838116911614610bf7576000818152600a60205260409020546001600160a01b031615611313576000818152600a60209081526040808320546001600160a01b03168352600b9091528120805491611309836119d6565b9190505550611329565b60098054906000611323836119d6565b91905055505b6000818152600a6020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558352600b909152812080549161136b836119ed565b9190505550816001600160a01b03167f8a0e37b73a0d9c82e205d4d1a3ff3d0b57ce5f4d7bccf6bac03336dc101cb7ba826040516113ab91815260200190565b60405180910390a25050565b60085460ff166113c657600080fd5b6000838152600a60205260409020546001600160a01b031633146113e957600080fd5b61271083106113f757600080fd5b6040805160a0810182526001808252602080830187815233848601908152606085018881526001600160a01b038881166080880181815260008d8152600c88528a90209851895460ff191690151517895594519688019690965591516002870180546001600160a01b031990811692851692909217905590516003870155915160049095018054909216941693909317909255915184815285917f3c7b682d5da98001a9b8cbda6c647d2c63d698a4184fd1d55e2ce7b66f5d21eb910160405180910390a3505050565b60085460ff166114d057600080fd5b6000828152600a60205260409020546001600160a01b031633146114f357600080fd5b612710821061150157600080fd5b6040805160a0810182526001808252602080830186815233848601908152606085018781526000608087018181528a8252600c86528882209751885460ff191690151517885593519587019590955590516002860180546001600160a01b03199081166001600160a01b0393841617909155915160038701559151600490950180549091169490911693909317909255915183815284917f3c7b682d5da98001a9b8cbda6c647d2c63d698a4184fd1d55e2ce7b66f5d21eb91016107ad565b60085460ff166115cf57600080fd5b6009546000036115de57600080fd5b6000818152600a60205260409020546001600160a01b03161561160057600080fd5b612710811061160e57600080fd5b6000818152600a6020908152604080832080546001600160a01b031916339081179091558352600b9091528120805491611647836119ed565b90915550506009805490600061165c836119d6565b909155505060405181815233907f8a0e37b73a0d9c82e205d4d1a3ff3d0b57ce5f4d7bccf6bac03336dc101cb7ba9060200160405180910390a250565b60085460ff166116a857600080fd5b6000818152600a60205260409020546001600160a01b031633146116cb57600080fd5b61271081106116d957600080fd5b6040805160a08101825260008082526020808301858152338486019081526060850184815260808601858152888652600c9094528685209551865460ff191690151517865591516001860155516002850180546001600160a01b03199081166001600160a01b0393841617909155915160038601559151600490940180549091169390911692909217909155905182917fb0e0a660b4e50f26f0b7ce75c24655fc76cc66e3334a54ff410277229fa10bd491a250565b600060208083528351808285015260005b818110156117bc578581018301518582016040015282016117a0565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156117ef57600080fd5b5035919050565b6000806040838503121561180957600080fd5b50508035926020909101359150565b60008083601f84011261182a57600080fd5b50813567ffffffffffffffff81111561184257600080fd5b6020830191508360208260051b850101111561185d57600080fd5b9250929050565b6000806000806040858703121561187a57600080fd5b843567ffffffffffffffff8082111561189257600080fd5b61189e88838901611818565b909650945060208701359150808211156118b757600080fd5b506118c487828801611818565b95989497509550505050565b80356001600160a01b03811681146118e757600080fd5b919050565b6000602082840312156118fe57600080fd5b611907826118d0565b9392505050565b6000806040838503121561192157600080fd5b61192a836118d0565b946020939093013593505050565b60008060006060848603121561194d57600080fd5b8335925060208401359150611964604085016118d0565b90509250925092565b600181811c9082168061198157607f821691505b6020821081036119a157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156119d0576119d06119a7565b92915050565b6000816119e5576119e56119a7565b506000190190565b6000600182016119ff576119ff6119a7565b5060010190565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220fcf2e9f360ac55dd142aa300938f73e342dc44eead6c19bbf5e3cd5cb00362f264736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 13048,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "imageHash",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 13050,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 13053,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "standard",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 13055,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 13057,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 13059,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "decimals",
        "offset": 0,
        "slot": "5",
        "type": "t_uint8"
      },
      {
        "astId": 13061,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "totalSupply",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 13064,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "nextPunkIndexToAssign",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 13067,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "allPunksAssigned",
        "offset": 0,
        "slot": "8",
        "type": "t_bool"
      },
      {
        "astId": 13070,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "punksRemainingToAssign",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 13074,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "punkIndexToAddress",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 13078,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "balanceOf",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 13103,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "punksOfferedForSale",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_uint256,t_struct(Offer)13089_storage)"
      },
      {
        "astId": 13108,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "punkBids",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_uint256,t_struct(Bid)13098_storage)"
      },
      {
        "astId": 13112,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "pendingWithdrawals",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_struct(Bid)13098_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct CryptoPunksMarket.Bid)",
        "numberOfBytes": "32",
        "value": "t_struct(Bid)13098_storage"
      },
      "t_mapping(t_uint256,t_struct(Offer)13089_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct CryptoPunksMarket.Offer)",
        "numberOfBytes": "32",
        "value": "t_struct(Offer)13089_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Bid)13098_storage": {
        "encoding": "inplace",
        "label": "struct CryptoPunksMarket.Bid",
        "members": [
          {
            "astId": 13091,
            "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
            "label": "hasBid",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 13093,
            "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
            "label": "punkIndex",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 13095,
            "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
            "label": "bidder",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 13097,
            "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
            "label": "value",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Offer)13089_storage": {
        "encoding": "inplace",
        "label": "struct CryptoPunksMarket.Offer",
        "members": [
          {
            "astId": 13080,
            "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
            "label": "isForSale",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 13082,
            "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
            "label": "punkIndex",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 13084,
            "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
            "label": "seller",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 13086,
            "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
            "label": "minValue",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 13088,
            "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
            "label": "onlySellTo",
            "offset": 0,
            "slot": "4",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}