{
  "address": "0xcAa3c23aeEF417b00208e150ad04fD6A1878e474",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "Assign",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromAddress",
          "type": "address"
        }
      ],
      "name": "PunkBidEntered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromAddress",
          "type": "address"
        }
      ],
      "name": "PunkBidWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toAddress",
          "type": "address"
        }
      ],
      "name": "PunkBought",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "PunkNoLongerForSale",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minValue",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toAddress",
          "type": "address"
        }
      ],
      "name": "PunkOffered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "PunkTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minPrice",
          "type": "uint256"
        }
      ],
      "name": "acceptBidForPunk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allInitialOwnersAssigned",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allPunksAssigned",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "buyPunk",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "enterBidForPunk",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "getPunk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "imageHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextPunkIndexToAssign",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minSalePriceInWei",
          "type": "uint256"
        }
      ],
      "name": "offerPunkForSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minSalePriceInWei",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "toAddress",
          "type": "address"
        }
      ],
      "name": "offerPunkForSaleToAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pendingWithdrawals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "punkBids",
      "outputs": [
        {
          "internalType": "bool",
          "name": "hasBid",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "punkIndexToAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "punkNoLongerForSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "punksOfferedForSale",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isForSale",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minValue",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "onlySellTo",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "punksRemainingToAssign",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "setInitialOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "indices",
          "type": "uint256[]"
        }
      ],
      "name": "setInitialOwners",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "standard",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "transferPunk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "punkIndex",
          "type": "uint256"
        }
      ],
      "name": "withdrawBidForPunk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x38fc5df647d42e7d4876d4cc8fd5028a2fd5665d90f5af9988b4545df670f146",
  "receipt": {
    "to": null,
    "from": "0x4eF26a3129b91Ee21d5E9Ed963e6549B531C3744",
    "contractAddress": "0xcAa3c23aeEF417b00208e150ad04fD6A1878e474",
    "transactionIndex": 3,
    "gasUsed": "3102587",
    "logsBloom": "0x
    "blockHash": "0x1ecf983a8b329a18c08ccd1f6311dbe362d5ebaaa1e0d6f6e510c8a5e9dc5d1f",
    "transactionHash": "0x38fc5df647d42e7d4876d4cc8fd5028a2fd5665d90f5af9988b4545df670f146",
    "logs": [],
    "blockNumber": 8265097,
    "cumulativeGasUsed": "3477281",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "2f851f22a3dca6a6d3904dfb1124bf63",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"Assign\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"}],\"name\":\"PunkBidEntered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"}],\"name\":\"PunkBidWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"}],\"name\":\"PunkBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"PunkNoLongerForSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minValue\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"}],\"name\":\"PunkOffered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"PunkTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPrice\",\"type\":\"uint256\"}],\"name\":\"acceptBidForPunk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allInitialOwnersAssigned\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPunksAssigned\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"buyPunk\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"enterBidForPunk\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"getPunk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"imageHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextPunkIndexToAssign\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minSalePriceInWei\",\"type\":\"uint256\"}],\"name\":\"offerPunkForSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minSalePriceInWei\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"}],\"name\":\"offerPunkForSaleToAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingWithdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"punkBids\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasBid\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"punkIndexToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"punkNoLongerForSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"punksOfferedForSale\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isForSale\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minValue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onlySellTo\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"punksRemainingToAssign\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"setInitialOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"indices\",\"type\":\"uint256[]\"}],\"name\":\"setInitialOwners\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"transferPunk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"punkIndex\",\"type\":\"uint256\"}],\"name\":\"withdrawBidForPunk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/external/CryptoPunksMarket.sol\":\"CryptoPunksMarket\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363732393933353532393837\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/external/CryptoPunksMarket.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.17;\\n\\n// Modified original CryptoPunksMarket with recent solidity code style\\ncontract CryptoPunksMarket {\\n\\n    // You can use this hash to verify the image file containing all the punks\\n    string public imageHash = \\\"ac39af4793119ee46bbff351d8cb6b5f23da60222126add4268e261199a2921b\\\";\\n\\n    address owner;\\n\\n    string public standard = 'CryptoPunks';\\n    string public name;\\n    string public symbol;\\n    uint8 public decimals;\\n    uint256 public totalSupply;\\n\\n    uint public nextPunkIndexToAssign = 0;\\n\\n    bool public allPunksAssigned = false;\\n    uint public punksRemainingToAssign = 0;\\n\\n    //mapping (address => uint) public addressToPunkIndex;\\n    mapping (uint => address) public punkIndexToAddress;\\n\\n    /* This creates an array with all balances */\\n    mapping (address => uint256) public balanceOf;\\n\\n    struct Offer {\\n        bool isForSale;\\n        uint punkIndex;\\n        address seller;\\n        uint minValue;          // in ether\\n        address onlySellTo;     // specify to sell only to a specific person\\n    }\\n\\n    struct Bid {\\n        bool hasBid;\\n        uint punkIndex;\\n        address bidder;\\n        uint value;\\n    }\\n\\n    // A record of punks that are offered for sale at a specific minimum value, and perhaps to a specific person\\n    mapping (uint => Offer) public punksOfferedForSale;\\n\\n    // A record of the highest punk bid\\n    mapping (uint => Bid) public punkBids;\\n\\n    mapping (address => uint) public pendingWithdrawals;\\n\\n    event Assign(address indexed to, uint256 punkIndex);\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event PunkTransfer(address indexed from, address indexed to, uint256 punkIndex);\\n    event PunkOffered(uint indexed punkIndex, uint minValue, address indexed toAddress);\\n    event PunkBidEntered(uint indexed punkIndex, uint value, address indexed fromAddress);\\n    event PunkBidWithdrawn(uint indexed punkIndex, uint value, address indexed fromAddress);\\n    event PunkBought(uint indexed punkIndex, uint value, address indexed fromAddress, address indexed toAddress);\\n    event PunkNoLongerForSale(uint indexed punkIndex);\\n\\n    /* Initializes contract with initial supply tokens to the creator of the contract */\\n    constructor() payable {\\n        //        balanceOf[msg.sender] = initialSupply;              // Give the creator all initial tokens\\n        owner = msg.sender;\\n        totalSupply = 10000;                        // Update total supply\\n        punksRemainingToAssign = totalSupply;\\n        name = \\\"CRYPTOPUNKS\\\";                                   // Set the name for display purposes\\n        symbol = unicode\\\"\\u03fe\\\";                               // Set the symbol for display purposes\\n        decimals = 0;                                       // Amount of decimals for display purposes\\n    }\\n\\n    function setInitialOwner(address to, uint punkIndex) public {\\n        if (msg.sender != owner) revert();\\n        if (allPunksAssigned) revert();\\n        if (punkIndex >= 10000) revert();\\n        if (punkIndexToAddress[punkIndex] != to) {\\n            if (punkIndexToAddress[punkIndex] != address(0x0)) {\\n                balanceOf[punkIndexToAddress[punkIndex]]--;\\n            } else {\\n                punksRemainingToAssign--;\\n            }\\n            punkIndexToAddress[punkIndex] = to;\\n            balanceOf[to]++;\\n            emit Assign(to, punkIndex);\\n        }\\n    }\\n\\n    function setInitialOwners(address[] calldata addresses, uint[] calldata indices) public {\\n        if (msg.sender != owner) revert();\\n        uint n = addresses.length;\\n        for (uint i = 0; i < n; i++) {\\n            setInitialOwner(addresses[i], indices[i]);\\n        }\\n    }\\n\\n    function allInitialOwnersAssigned() public {\\n        if (msg.sender != owner) revert();\\n        allPunksAssigned = true;\\n    }\\n\\n    function getPunk(uint punkIndex) public {\\n        if (!allPunksAssigned) revert();\\n        if (punksRemainingToAssign == 0) revert();\\n        if (punkIndexToAddress[punkIndex] != address(0x0)) revert();\\n        if (punkIndex >= 10000) revert();\\n        punkIndexToAddress[punkIndex] = msg.sender;\\n        balanceOf[msg.sender]++;\\n        punksRemainingToAssign--;\\n        emit Assign(msg.sender, punkIndex);\\n    }\\n\\n    // Transfer ownership of a punk to another user without requiring payment\\n    function transferPunk(address to, uint punkIndex) public {\\n        if (!allPunksAssigned) revert();\\n        if (punkIndexToAddress[punkIndex] != msg.sender) revert();\\n        if (punkIndex >= 10000) revert();\\n        if (punksOfferedForSale[punkIndex].isForSale) {\\n            punkNoLongerForSale(punkIndex);\\n        }\\n        punkIndexToAddress[punkIndex] = to;\\n        balanceOf[msg.sender]--;\\n        balanceOf[to]++;\\n        emit Transfer(msg.sender, to, 1);\\n        emit PunkTransfer(msg.sender, to, punkIndex);\\n        // Check for the case where there is a bid from the new owner and refund it.\\n        // Any other bid can stay in place.\\n        Bid storage bid =  punkBids[punkIndex];\\n        if (bid.bidder == to) {\\n            // Kill bid and refund value\\n            pendingWithdrawals[to] += bid.value;\\n            punkBids[punkIndex] = Bid(false, punkIndex, address(0x0), 0);\\n        }\\n    }\\n\\n    function punkNoLongerForSale(uint punkIndex) public {\\n        if (!allPunksAssigned) revert();\\n        if (punkIndexToAddress[punkIndex] != msg.sender) revert();\\n        if (punkIndex >= 10000) revert();\\n        punksOfferedForSale[punkIndex] = Offer(false, punkIndex, msg.sender, 0, address(0x0));\\n        emit PunkNoLongerForSale(punkIndex);\\n    }\\n\\n    function offerPunkForSale(uint punkIndex, uint minSalePriceInWei) public {\\n        if (!allPunksAssigned) revert();\\n        if (punkIndexToAddress[punkIndex] != msg.sender) revert();\\n        if (punkIndex >= 10000) revert();\\n        punksOfferedForSale[punkIndex] = Offer(true, punkIndex, msg.sender, minSalePriceInWei, address(0x0));\\n        emit PunkOffered(punkIndex, minSalePriceInWei, address(0x0));\\n    }\\n\\n    function offerPunkForSaleToAddress(uint punkIndex, uint minSalePriceInWei, address toAddress) public {\\n        if (!allPunksAssigned) revert();\\n        if (punkIndexToAddress[punkIndex] != msg.sender) revert();\\n        if (punkIndex >= 10000) revert();\\n        punksOfferedForSale[punkIndex] = Offer(true, punkIndex, msg.sender, minSalePriceInWei, toAddress);\\n        emit PunkOffered(punkIndex, minSalePriceInWei, toAddress);\\n    }\\n\\n    function buyPunk(uint punkIndex) public payable {\\n        if (!allPunksAssigned) revert();\\n        Offer storage offer = punksOfferedForSale[punkIndex];\\n        if (punkIndex >= 10000) revert();\\n        if (!offer.isForSale) revert();                // punk not actually for sale\\n        if (offer.onlySellTo != address(0x0) && offer.onlySellTo != msg.sender) revert();  // punk not supposed to be sold to this user\\n        if (msg.value < offer.minValue) revert();      // Didn't send enough ETH\\n        if (offer.seller != punkIndexToAddress[punkIndex]) revert(); // Seller no longer owner of punk\\n\\n        address seller = offer.seller;\\n\\n        punkIndexToAddress[punkIndex] = msg.sender;\\n        balanceOf[seller]--;\\n        balanceOf[msg.sender]++;\\n        emit Transfer(seller, msg.sender, 1);\\n\\n        punkNoLongerForSale(punkIndex);\\n        pendingWithdrawals[seller] += msg.value;\\n        emit PunkBought(punkIndex, msg.value, seller, msg.sender);\\n\\n        // Check for the case where there is a bid from the new owner and refund it.\\n        // Any other bid can stay in place.\\n        Bid storage bid =  punkBids[punkIndex];\\n        if (bid.bidder == msg.sender) {\\n            // Kill bid and refund value\\n            pendingWithdrawals[msg.sender] += bid.value;\\n            punkBids[punkIndex] = Bid(false, punkIndex, address(0x0), 0);\\n        }\\n    }\\n\\n    function withdraw() public {\\n        if (!allPunksAssigned) revert();\\n        uint amount = pendingWithdrawals[msg.sender];\\n        // Remember to zero the pending refund before\\n        // sending to prevent re-entrancy attacks\\n        pendingWithdrawals[msg.sender] = 0;\\n        payable(msg.sender).transfer(amount);\\n    }\\n\\n    function enterBidForPunk(uint punkIndex) public payable {\\n        if (punkIndex >= 10000) revert();\\n        if (!allPunksAssigned) revert();\\n        if (punkIndexToAddress[punkIndex] == address(0x0)) revert();\\n        if (punkIndexToAddress[punkIndex] == msg.sender) revert();\\n        if (msg.value == 0) revert();\\n        Bid storage existing = punkBids[punkIndex];\\n        if (msg.value <= existing.value) revert();\\n        if (existing.value > 0) {\\n            // Refund the failing bid\\n            pendingWithdrawals[existing.bidder] += existing.value;\\n        }\\n        punkBids[punkIndex] = Bid(true, punkIndex, msg.sender, msg.value);\\n        emit PunkBidEntered(punkIndex, msg.value, msg.sender);\\n    }\\n\\n    function acceptBidForPunk(uint punkIndex, uint minPrice) public {\\n        if (punkIndex >= 10000) revert();\\n        if (!allPunksAssigned) revert();\\n        if (punkIndexToAddress[punkIndex] != msg.sender) revert();\\n        address seller = msg.sender;\\n        Bid storage bid =  punkBids[punkIndex];\\n        if (bid.value == 0) revert();\\n        if (bid.value < minPrice) revert();\\n\\n        punkIndexToAddress[punkIndex] = bid.bidder;\\n        balanceOf[seller]--;\\n        balanceOf[bid.bidder]++;\\n        emit Transfer(seller, bid.bidder, 1);\\n\\n        punksOfferedForSale[punkIndex] = Offer(false, punkIndex, bid.bidder, 0, address(0x0));\\n        uint amount = bid.value;\\n        punkBids[punkIndex] = Bid(false, punkIndex, address(0x0), 0);\\n        pendingWithdrawals[seller] += amount;\\n        emit PunkBought(punkIndex, bid.value, seller, bid.bidder);\\n    }\\n\\n    function withdrawBidForPunk(uint punkIndex) public {\\n        if (punkIndex >= 10000) revert();\\n        if (!allPunksAssigned) revert();\\n        if (punkIndexToAddress[punkIndex] == address(0x0)) revert();\\n        if (punkIndexToAddress[punkIndex] == msg.sender) revert();\\n        Bid storage bid =  punkBids[punkIndex];\\n        if (bid.bidder != msg.sender) revert();\\n        emit PunkBidWithdrawn(punkIndex, bid.value, msg.sender);\\n        uint amount = bid.value;\\n        punkBids[punkIndex] = Bid(false, punkIndex, address(0x0), 0);\\n        // Refund the bid money\\n        payable(msg.sender).transfer(amount);\\n    }\\n\\n}\",\"keccak256\":\"0xbec5c382a76206d2ecd6e7657a69b61867576d44f8467352825ade4e8b5e446f\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60806040526040518060600160405280604081526020016200382d60409139600090816200002e919062000418565b506040518060400160405280600b81526020017f43727970746f50756e6b730000000000000000000000000000000000000000008152506002908162000075919062000418565b5060006007556000600860006101000a81548160ff021916908315150217905550600060095533600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506127106006819055506006546009819055506040518060400160405280600b81526020017f43525950544f50554e4b530000000000000000000000000000000000000000008152506003908162000134919062000418565b506040518060400160405280600281526020017fcfbe000000000000000000000000000000000000000000000000000000000000815250600490816200017b919062000418565b506000600560006101000a81548160ff021916908360ff160217905550620004ff565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200022057607f821691505b602082108103620002365762000235620001d8565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000261565b620002ac868362000261565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620002f9620002f3620002ed84620002c4565b620002ce565b620002c4565b9050919050565b6000819050919050565b6200031583620002d8565b6200032d620003248262000300565b8484546200026e565b825550505050565b600090565b6200034462000335565b620003518184846200030a565b505050565b5b8181101562000379576200036d6000826200033a565b60018101905062000357565b5050565b601f821115620003c85762000392816200023c565b6200039d8462000251565b81016020851015620003ad578190505b620003c5620003bc8562000251565b83018262000356565b50505b505050565b600082821c905092915050565b6000620003ed60001984600802620003cd565b1980831691505092915050565b6000620004088383620003da565b9150826002028217905092915050565b62000423826200019e565b67ffffffffffffffff8111156200043f576200043e620001a9565b5b6200044b825462000207565b620004588282856200037d565b600060209050601f8311600181146200049057600084156200047b578287015190505b620004878582620003fa565b865550620004f7565b601f198416620004a0866200023c565b60005b82811015620004ca57848901518255600182019150602085019450602081019050620004a3565b86831015620004ea5784890151620004e6601f891682620003da565b8355505b6001600288020188555050505b505050505050565b61331e806200050f6000396000f3fe60806040526004361061019c5760003560e01c806370a08231116100ec578063a75a90491161008a578063c44193c311610064578063c44193c31461057b578063c81d1d5b146105a4578063f3f43703146105cd578063f6eeff1e1461060a5761019c565b8063a75a9049146104fe578063bf31196f14610527578063c0d6ce63146105505761019c565b80638264fe98116100c65780638264fe98146104655780638b72a2ec1461048157806395d89b41146104aa578063979bc638146104d55761019c565b806370a08231146103e65780637ecedac9146104235780638126c38a1461043a5761019c565b806339c5dde61161015957806352f29a251161013357806352f29a2514610313578063581781681461033e5780635a3b7e421461037b5780636e743fa9146103a65761019c565b806339c5dde6146102a85780633ccfd60b146102d157806351605d80146102e85761019c565b806306fdde03146101a1578063088f11f3146101cc578063091dbfd21461020d57806318160ddd1461022957806323165b7514610254578063313ce5671461027d575b600080fd5b3480156101ad57600080fd5b506101b6610633565b6040516101c39190612ca3565b60405180910390f35b3480156101d857600080fd5b506101f360048036038101906101ee9190612d05565b6106c1565b604051610204959493929190612d9d565b60405180910390f35b61022760048036038101906102229190612d05565b610744565b005b34801561023557600080fd5b5061023e610a20565b60405161024b9190612df0565b60405180910390f35b34801561026057600080fd5b5061027b60048036038101906102769190612e0b565b610a26565b005b34801561028957600080fd5b50610292610fd9565b60405161029f9190612e67565b60405180910390f35b3480156102b457600080fd5b506102cf60048036038101906102ca9190612f3d565b610fec565b005b3480156102dd57600080fd5b506102e66110be565b005b3480156102f457600080fd5b506102fd6111aa565b60405161030a9190612ca3565b60405180910390f35b34801561031f57600080fd5b50610328611238565b6040516103359190612df0565b60405180910390f35b34801561034a57600080fd5b5061036560048036038101906103609190612d05565b61123e565b6040516103729190612fbe565b60405180910390f35b34801561038757600080fd5b50610390611271565b60405161039d9190612ca3565b60405180910390f35b3480156103b257600080fd5b506103cd60048036038101906103c89190612d05565b6112ff565b6040516103dd9493929190612fd9565b60405180910390f35b3480156103f257600080fd5b5061040d6004803603810190610408919061304a565b61135c565b60405161041a9190612df0565b60405180910390f35b34801561042f57600080fd5b50610438611374565b005b34801561044657600080fd5b5061044f6113eb565b60405161045c9190613077565b60405180910390f35b61047f600480360381019061047a9190612d05565b6113fe565b005b34801561048d57600080fd5b506104a860048036038101906104a39190613092565b61199e565b005b3480156104b657600080fd5b506104bf611dc5565b6040516104cc9190612ca3565b60405180910390f35b3480156104e157600080fd5b506104fc60048036038101906104f79190612d05565b611e53565b005b34801561050a57600080fd5b5061052560048036038101906105209190613092565b612139565b005b34801561053357600080fd5b5061054e600480360381019061054991906130d2565b612428565b005b34801561055c57600080fd5b5061056561263c565b6040516105729190612df0565b60405180910390f35b34801561058757600080fd5b506105a2600480360381019061059d9190612e0b565b612642565b005b3480156105b057600080fd5b506105cb60048036038101906105c69190612d05565b612857565b005b3480156105d957600080fd5b506105f460048036038101906105ef919061304a565b612a09565b6040516106019190612df0565b60405180910390f35b34801561061657600080fd5b50610631600480360381019061062c9190612d05565b612a21565b005b6003805461064090613154565b80601f016020809104026020016040519081016040528092919081815260200182805461066c90613154565b80156106b95780601f1061068e576101008083540402835291602001916106b9565b820191906000526020600020905b81548152906001019060200180831161069c57829003601f168201915b505050505081565b600c6020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905085565b612710811061075257600080fd5b600860009054906101000a900460ff1661076b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036107d757600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361084257600080fd5b6000340361084f57600080fd5b6000600d600083815260200190815260200160002090508060030154341161087657600080fd5b600081600301541115610902578060030154600e60008360020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108fa91906131b4565b925050819055505b60405180608001604052806001151581526020018381526020013373ffffffffffffffffffffffffffffffffffffffff16815260200134815250600d600084815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301559050503373ffffffffffffffffffffffffffffffffffffffff16827f5b859394fabae0c1ba88baffe67e751ab5248d2e879028b8c8d6897b0519f56a34604051610a149190612df0565b60405180910390a35050565b60065481565b6127108210610a3457600080fd5b600860009054906101000a900460ff16610a4d57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600a600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ab857600080fd5b60003390506000600d600085815260200190815260200160002090506000816003015403610ae557600080fd5b8281600301541015610af657600080fd5b8060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190610bbc906131e8565b9190505550600b60008260020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190610c3590613211565b91905055508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6001604051610cbc919061329e565b60405180910390a36040518060a001604052806000151581526020018581526020018260020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815250600c600086815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506000816003015490506040518060800160405280600015158152602001868152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815250600d600087815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015590505080600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f3d91906131b4565b925050819055508160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16867f58e5d5a525e3b40bc15abaa38b5882678db1ee68befd2f60bafe3a7fd06db9e38560030154604051610fca9190612df0565b60405180910390a45050505050565b600560009054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461104657600080fd5b600084849050905060005b818110156110b6576110a386868381811061106f5761106e6132b9565b5b9050602002016020810190611084919061304a565b858584818110611097576110966132b9565b5b90506020020135612139565b80806110ae90613211565b915050611051565b505050505050565b600860009054906101000a900460ff166110d757600080fd5b6000600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156111a6573d6000803e3d6000fd5b5050565b600080546111b790613154565b80601f01602080910402602001604051908101604052809291908181526020018280546111e390613154565b80156112305780601f1061120557610100808354040283529160200191611230565b820191906000526020600020905b81548152906001019060200180831161121357829003601f168201915b505050505081565b60075481565b600a6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002805461127e90613154565b80601f01602080910402602001604051908101604052809291908181526020018280546112aa90613154565b80156112f75780601f106112cc576101008083540402835291602001916112f7565b820191906000526020600020905b8154815290600101906020018083116112da57829003601f168201915b505050505081565b600d6020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154905084565b600b6020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146113ce57600080fd5b6001600860006101000a81548160ff021916908315150217905550565b600860009054906101000a900460ff1681565b600860009054906101000a900460ff1661141757600080fd5b6000600c60008381526020019081526020016000209050612710821061143c57600080fd5b8060000160009054906101000a900460ff1661145757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415801561150857503373ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b1561151257600080fd5b806003015434101561152357600080fd5b600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146115b257600080fd5b60008160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905033600a600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600b60008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061167d906131e8565b9190505550600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906116d290613211565b91905055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6001604051611735919061329e565b60405180910390a361174683612a21565b34600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461179591906131b4565b925050819055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16847f58e5d5a525e3b40bc15abaa38b5882678db1ee68befd2f60bafe3a7fd06db9e3346040516117fa9190612df0565b60405180910390a46000600d600085815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611998578060030154600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546118c391906131b4565b925050819055506040518060800160405280600015158152602001858152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815250600d600086815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301559050505b50505050565b600860009054906101000a900460ff166119b757600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611a2257600080fd5b6127108110611a3057600080fd5b600c600082815260200190815260200160002060000160009054906101000a900460ff1615611a6357611a6281612a21565b5b81600a600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190611b05906131e8565b9190505550600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190611b5a90613211565b91905055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6001604051611bbd919061329e565b60405180910390a38173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f05af636b70da6819000c49f85b21fa82081c632069bb626f30932034099107d883604051611c229190612df0565b60405180910390a36000600d600083815260200190815260200160002090508273ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611dc0578060030154600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611ceb91906131b4565b925050819055506040518060800160405280600015158152602001838152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815250600d600084815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301559050505b505050565b60048054611dd290613154565b80601f0160208091040260200160405190810160405280929190818152602001828054611dfe90613154565b8015611e4b5780601f10611e2057610100808354040283529160200191611e4b565b820191906000526020600020905b815481529060010190602001808311611e2e57829003601f168201915b505050505081565b6127108110611e6157600080fd5b600860009054906101000a900460ff16611e7a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611ee657600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611f5157600080fd5b6000600d600083815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611fc457600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16827f6f30e1ee4d81dcc7a8a478577f65d2ed2edb120565960ac45fe7c50551c87932836003015460405161200f9190612df0565b60405180910390a36000816003015490506040518060800160405280600015158152602001848152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815250600d600085815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301559050503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015612133573d6000803e3d6000fd5b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461219357600080fd5b600860009054906101000a900460ff16156121ad57600080fd5b61271081106121bb57600080fd5b8173ffffffffffffffffffffffffffffffffffffffff16600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461242457600073ffffffffffffffffffffffffffffffffffffffff16600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461231557600b6000600a600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061230b906131e8565b919050555061232e565b60096000815480929190612328906131e8565b91905055505b81600a600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906123d090613211565b91905055508173ffffffffffffffffffffffffffffffffffffffff167f8a0e37b73a0d9c82e205d4d1a3ff3d0b57ce5f4d7bccf6bac03336dc101cb7ba8260405161241b9190612df0565b60405180910390a25b5050565b600860009054906101000a900460ff1661244157600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600a600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146124ac57600080fd5b61271083106124ba57600080fd5b6040518060a001604052806001151581526020018481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff16815250600c600085815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508073ffffffffffffffffffffffffffffffffffffffff16837f3c7b682d5da98001a9b8cbda6c647d2c63d698a4184fd1d55e2ce7b66f5d21eb8460405161262f9190612df0565b60405180910390a3505050565b60095481565b600860009054906101000a900460ff1661265b57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600a600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146126c657600080fd5b61271082106126d457600080fd5b6040518060a001604052806001151581526020018381526020013373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001600073ffffffffffffffffffffffffffffffffffffffff16815250600c600084815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600073ffffffffffffffffffffffffffffffffffffffff16827f3c7b682d5da98001a9b8cbda6c647d2c63d698a4184fd1d55e2ce7b66f5d21eb8360405161284b9190612df0565b60405180910390a35050565b600860009054906101000a900460ff1661287057600080fd5b60006009540361287f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146128eb57600080fd5b61271081106128f957600080fd5b33600a600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061299b90613211565b9190505550600960008154809291906129b3906131e8565b91905055503373ffffffffffffffffffffffffffffffffffffffff167f8a0e37b73a0d9c82e205d4d1a3ff3d0b57ce5f4d7bccf6bac03336dc101cb7ba826040516129fe9190612df0565b60405180910390a250565b600e6020528060005260406000206000915090505481565b600860009054906101000a900460ff16612a3a57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612aa557600080fd5b6127108110612ab357600080fd5b6040518060a001604052806000151581526020018281526020013373ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815250600c600083815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050807fb0e0a660b4e50f26f0b7ce75c24655fc76cc66e3334a54ff410277229fa10bd460405160405180910390a250565b600081519050919050565b600082825260208201905092915050565b60005b83811015612c4d578082015181840152602081019050612c32565b60008484015250505050565b6000601f19601f8301169050919050565b6000612c7582612c13565b612c7f8185612c1e565b9350612c8f818560208601612c2f565b612c9881612c59565b840191505092915050565b60006020820190508181036000830152612cbd8184612c6a565b905092915050565b600080fd5b600080fd5b6000819050919050565b612ce281612ccf565b8114612ced57600080fd5b50565b600081359050612cff81612cd9565b92915050565b600060208284031215612d1b57612d1a612cc5565b5b6000612d2984828501612cf0565b91505092915050565b60008115159050919050565b612d4781612d32565b82525050565b612d5681612ccf565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612d8782612d5c565b9050919050565b612d9781612d7c565b82525050565b600060a082019050612db26000830188612d3e565b612dbf6020830187612d4d565b612dcc6040830186612d8e565b612dd96060830185612d4d565b612de66080830184612d8e565b9695505050505050565b6000602082019050612e056000830184612d4d565b92915050565b60008060408385031215612e2257612e21612cc5565b5b6000612e3085828601612cf0565b9250506020612e4185828601612cf0565b9150509250929050565b600060ff82169050919050565b612e6181612e4b565b82525050565b6000602082019050612e7c6000830184612e58565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112612ea757612ea6612e82565b5b8235905067ffffffffffffffff811115612ec457612ec3612e87565b5b602083019150836020820283011115612ee057612edf612e8c565b5b9250929050565b60008083601f840112612efd57612efc612e82565b5b8235905067ffffffffffffffff811115612f1a57612f19612e87565b5b602083019150836020820283011115612f3657612f35612e8c565b5b9250929050565b60008060008060408587031215612f5757612f56612cc5565b5b600085013567ffffffffffffffff811115612f7557612f74612cca565b5b612f8187828801612e91565b9450945050602085013567ffffffffffffffff811115612fa457612fa3612cca565b5b612fb087828801612ee7565b925092505092959194509250565b6000602082019050612fd36000830184612d8e565b92915050565b6000608082019050612fee6000830187612d3e565b612ffb6020830186612d4d565b6130086040830185612d8e565b6130156060830184612d4d565b95945050505050565b61302781612d7c565b811461303257600080fd5b50565b6000813590506130448161301e565b92915050565b6000602082840312156130605761305f612cc5565b5b600061306e84828501613035565b91505092915050565b600060208201905061308c6000830184612d3e565b92915050565b600080604083850312156130a9576130a8612cc5565b5b60006130b785828601613035565b92505060206130c885828601612cf0565b9150509250929050565b6000806000606084860312156130eb576130ea612cc5565b5b60006130f986828701612cf0565b935050602061310a86828701612cf0565b925050604061311b86828701613035565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061316c57607f821691505b60208210810361317f5761317e613125565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006131bf82612ccf565b91506131ca83612ccf565b92508282019050808211156131e2576131e1613185565b5b92915050565b60006131f382612ccf565b91506000820361320657613205613185565b5b600182039050919050565b600061321c82612ccf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361324e5761324d613185565b5b600182019050919050565b6000819050919050565b6000819050919050565b600061328861328361327e84613259565b613263565b612ccf565b9050919050565b6132988161326d565b82525050565b60006020820190506132b3600083018461328f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212204462c25ea45a0cae5a269fe44b7b2bf1fd4fedcb5231b711e3f86bfcc79d8d4964736f6c6343000811003361633339616634373933313139656534366262666633353164386362366235663233646136303232323132366164643432363865323631313939613239323162",
  "deployedBytecode": "0x60806040526004361061019c5760003560e01c806370a08231116100ec578063a75a90491161008a578063c44193c311610064578063c44193c31461057b578063c81d1d5b146105a4578063f3f43703146105cd578063f6eeff1e1461060a5761019c565b8063a75a9049146104fe578063bf31196f14610527578063c0d6ce63146105505761019c565b80638264fe98116100c65780638264fe98146104655780638b72a2ec1461048157806395d89b41146104aa578063979bc638146104d55761019c565b806370a08231146103e65780637ecedac9146104235780638126c38a1461043a5761019c565b806339c5dde61161015957806352f29a251161013357806352f29a2514610313578063581781681461033e5780635a3b7e421461037b5780636e743fa9146103a65761019c565b806339c5dde6146102a85780633ccfd60b146102d157806351605d80146102e85761019c565b806306fdde03146101a1578063088f11f3146101cc578063091dbfd21461020d57806318160ddd1461022957806323165b7514610254578063313ce5671461027d575b600080fd5b3480156101ad57600080fd5b506101b6610633565b6040516101c39190612ca3565b60405180910390f35b3480156101d857600080fd5b506101f360048036038101906101ee9190612d05565b6106c1565b604051610204959493929190612d9d565b60405180910390f35b61022760048036038101906102229190612d05565b610744565b005b34801561023557600080fd5b5061023e610a20565b60405161024b9190612df0565b60405180910390f35b34801561026057600080fd5b5061027b60048036038101906102769190612e0b565b610a26565b005b34801561028957600080fd5b50610292610fd9565b60405161029f9190612e67565b60405180910390f35b3480156102b457600080fd5b506102cf60048036038101906102ca9190612f3d565b610fec565b005b3480156102dd57600080fd5b506102e66110be565b005b3480156102f457600080fd5b506102fd6111aa565b60405161030a9190612ca3565b60405180910390f35b34801561031f57600080fd5b50610328611238565b6040516103359190612df0565b60405180910390f35b34801561034a57600080fd5b5061036560048036038101906103609190612d05565b61123e565b6040516103729190612fbe565b60405180910390f35b34801561038757600080fd5b50610390611271565b60405161039d9190612ca3565b60405180910390f35b3480156103b257600080fd5b506103cd60048036038101906103c89190612d05565b6112ff565b6040516103dd9493929190612fd9565b60405180910390f35b3480156103f257600080fd5b5061040d6004803603810190610408919061304a565b61135c565b60405161041a9190612df0565b60405180910390f35b34801561042f57600080fd5b50610438611374565b005b34801561044657600080fd5b5061044f6113eb565b60405161045c9190613077565b60405180910390f35b61047f600480360381019061047a9190612d05565b6113fe565b005b34801561048d57600080fd5b506104a860048036038101906104a39190613092565b61199e565b005b3480156104b657600080fd5b506104bf611dc5565b6040516104cc9190612ca3565b60405180910390f35b3480156104e157600080fd5b506104fc60048036038101906104f79190612d05565b611e53565b005b34801561050a57600080fd5b5061052560048036038101906105209190613092565b612139565b005b34801561053357600080fd5b5061054e600480360381019061054991906130d2565b612428565b005b34801561055c57600080fd5b5061056561263c565b6040516105729190612df0565b60405180910390f35b34801561058757600080fd5b506105a2600480360381019061059d9190612e0b565b612642565b005b3480156105b057600080fd5b506105cb60048036038101906105c69190612d05565b612857565b005b3480156105d957600080fd5b506105f460048036038101906105ef919061304a565b612a09565b6040516106019190612df0565b60405180910390f35b34801561061657600080fd5b50610631600480360381019061062c9190612d05565b612a21565b005b6003805461064090613154565b80601f016020809104026020016040519081016040528092919081815260200182805461066c90613154565b80156106b95780601f1061068e576101008083540402835291602001916106b9565b820191906000526020600020905b81548152906001019060200180831161069c57829003601f168201915b505050505081565b600c6020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905085565b612710811061075257600080fd5b600860009054906101000a900460ff1661076b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036107d757600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361084257600080fd5b6000340361084f57600080fd5b6000600d600083815260200190815260200160002090508060030154341161087657600080fd5b600081600301541115610902578060030154600e60008360020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108fa91906131b4565b925050819055505b60405180608001604052806001151581526020018381526020013373ffffffffffffffffffffffffffffffffffffffff16815260200134815250600d600084815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301559050503373ffffffffffffffffffffffffffffffffffffffff16827f5b859394fabae0c1ba88baffe67e751ab5248d2e879028b8c8d6897b0519f56a34604051610a149190612df0565b60405180910390a35050565b60065481565b6127108210610a3457600080fd5b600860009054906101000a900460ff16610a4d57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600a600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ab857600080fd5b60003390506000600d600085815260200190815260200160002090506000816003015403610ae557600080fd5b8281600301541015610af657600080fd5b8060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190610bbc906131e8565b9190505550600b60008260020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190610c3590613211565b91905055508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6001604051610cbc919061329e565b60405180910390a36040518060a001604052806000151581526020018581526020018260020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815250600c600086815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506000816003015490506040518060800160405280600015158152602001868152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815250600d600087815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015590505080600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f3d91906131b4565b925050819055508160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16867f58e5d5a525e3b40bc15abaa38b5882678db1ee68befd2f60bafe3a7fd06db9e38560030154604051610fca9190612df0565b60405180910390a45050505050565b600560009054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461104657600080fd5b600084849050905060005b818110156110b6576110a386868381811061106f5761106e6132b9565b5b9050602002016020810190611084919061304a565b858584818110611097576110966132b9565b5b90506020020135612139565b80806110ae90613211565b915050611051565b505050505050565b600860009054906101000a900460ff166110d757600080fd5b6000600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156111a6573d6000803e3d6000fd5b5050565b600080546111b790613154565b80601f01602080910402602001604051908101604052809291908181526020018280546111e390613154565b80156112305780601f1061120557610100808354040283529160200191611230565b820191906000526020600020905b81548152906001019060200180831161121357829003601f168201915b505050505081565b60075481565b600a6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002805461127e90613154565b80601f01602080910402602001604051908101604052809291908181526020018280546112aa90613154565b80156112f75780601f106112cc576101008083540402835291602001916112f7565b820191906000526020600020905b8154815290600101906020018083116112da57829003601f168201915b505050505081565b600d6020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154905084565b600b6020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146113ce57600080fd5b6001600860006101000a81548160ff021916908315150217905550565b600860009054906101000a900460ff1681565b600860009054906101000a900460ff1661141757600080fd5b6000600c60008381526020019081526020016000209050612710821061143c57600080fd5b8060000160009054906101000a900460ff1661145757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415801561150857503373ffffffffffffffffffffffffffffffffffffffff168160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b1561151257600080fd5b806003015434101561152357600080fd5b600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146115b257600080fd5b60008160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905033600a600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600b60008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061167d906131e8565b9190505550600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906116d290613211565b91905055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6001604051611735919061329e565b60405180910390a361174683612a21565b34600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461179591906131b4565b925050819055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16847f58e5d5a525e3b40bc15abaa38b5882678db1ee68befd2f60bafe3a7fd06db9e3346040516117fa9190612df0565b60405180910390a46000600d600085815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611998578060030154600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546118c391906131b4565b925050819055506040518060800160405280600015158152602001858152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815250600d600086815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301559050505b50505050565b600860009054906101000a900460ff166119b757600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611a2257600080fd5b6127108110611a3057600080fd5b600c600082815260200190815260200160002060000160009054906101000a900460ff1615611a6357611a6281612a21565b5b81600a600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190611b05906131e8565b9190505550600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190611b5a90613211565b91905055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6001604051611bbd919061329e565b60405180910390a38173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f05af636b70da6819000c49f85b21fa82081c632069bb626f30932034099107d883604051611c229190612df0565b60405180910390a36000600d600083815260200190815260200160002090508273ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611dc0578060030154600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611ceb91906131b4565b925050819055506040518060800160405280600015158152602001838152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815250600d600084815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301559050505b505050565b60048054611dd290613154565b80601f0160208091040260200160405190810160405280929190818152602001828054611dfe90613154565b8015611e4b5780601f10611e2057610100808354040283529160200191611e4b565b820191906000526020600020905b815481529060010190602001808311611e2e57829003601f168201915b505050505081565b6127108110611e6157600080fd5b600860009054906101000a900460ff16611e7a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611ee657600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611f5157600080fd5b6000600d600083815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611fc457600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16827f6f30e1ee4d81dcc7a8a478577f65d2ed2edb120565960ac45fe7c50551c87932836003015460405161200f9190612df0565b60405180910390a36000816003015490506040518060800160405280600015158152602001848152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815250600d600085815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301559050503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015612133573d6000803e3d6000fd5b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461219357600080fd5b600860009054906101000a900460ff16156121ad57600080fd5b61271081106121bb57600080fd5b8173ffffffffffffffffffffffffffffffffffffffff16600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461242457600073ffffffffffffffffffffffffffffffffffffffff16600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461231557600b6000600a600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061230b906131e8565b919050555061232e565b60096000815480929190612328906131e8565b91905055505b81600a600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906123d090613211565b91905055508173ffffffffffffffffffffffffffffffffffffffff167f8a0e37b73a0d9c82e205d4d1a3ff3d0b57ce5f4d7bccf6bac03336dc101cb7ba8260405161241b9190612df0565b60405180910390a25b5050565b600860009054906101000a900460ff1661244157600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600a600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146124ac57600080fd5b61271083106124ba57600080fd5b6040518060a001604052806001151581526020018481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff16815250600c600085815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508073ffffffffffffffffffffffffffffffffffffffff16837f3c7b682d5da98001a9b8cbda6c647d2c63d698a4184fd1d55e2ce7b66f5d21eb8460405161262f9190612df0565b60405180910390a3505050565b60095481565b600860009054906101000a900460ff1661265b57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600a600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146126c657600080fd5b61271082106126d457600080fd5b6040518060a001604052806001151581526020018381526020013373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001600073ffffffffffffffffffffffffffffffffffffffff16815250600c600084815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600073ffffffffffffffffffffffffffffffffffffffff16827f3c7b682d5da98001a9b8cbda6c647d2c63d698a4184fd1d55e2ce7b66f5d21eb8360405161284b9190612df0565b60405180910390a35050565b600860009054906101000a900460ff1661287057600080fd5b60006009540361287f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146128eb57600080fd5b61271081106128f957600080fd5b33600a600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061299b90613211565b9190505550600960008154809291906129b3906131e8565b91905055503373ffffffffffffffffffffffffffffffffffffffff167f8a0e37b73a0d9c82e205d4d1a3ff3d0b57ce5f4d7bccf6bac03336dc101cb7ba826040516129fe9190612df0565b60405180910390a250565b600e6020528060005260406000206000915090505481565b600860009054906101000a900460ff16612a3a57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16600a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612aa557600080fd5b6127108110612ab357600080fd5b6040518060a001604052806000151581526020018281526020013373ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815250600c600083815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050807fb0e0a660b4e50f26f0b7ce75c24655fc76cc66e3334a54ff410277229fa10bd460405160405180910390a250565b600081519050919050565b600082825260208201905092915050565b60005b83811015612c4d578082015181840152602081019050612c32565b60008484015250505050565b6000601f19601f8301169050919050565b6000612c7582612c13565b612c7f8185612c1e565b9350612c8f818560208601612c2f565b612c9881612c59565b840191505092915050565b60006020820190508181036000830152612cbd8184612c6a565b905092915050565b600080fd5b600080fd5b6000819050919050565b612ce281612ccf565b8114612ced57600080fd5b50565b600081359050612cff81612cd9565b92915050565b600060208284031215612d1b57612d1a612cc5565b5b6000612d2984828501612cf0565b91505092915050565b60008115159050919050565b612d4781612d32565b82525050565b612d5681612ccf565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612d8782612d5c565b9050919050565b612d9781612d7c565b82525050565b600060a082019050612db26000830188612d3e565b612dbf6020830187612d4d565b612dcc6040830186612d8e565b612dd96060830185612d4d565b612de66080830184612d8e565b9695505050505050565b6000602082019050612e056000830184612d4d565b92915050565b60008060408385031215612e2257612e21612cc5565b5b6000612e3085828601612cf0565b9250506020612e4185828601612cf0565b9150509250929050565b600060ff82169050919050565b612e6181612e4b565b82525050565b6000602082019050612e7c6000830184612e58565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112612ea757612ea6612e82565b5b8235905067ffffffffffffffff811115612ec457612ec3612e87565b5b602083019150836020820283011115612ee057612edf612e8c565b5b9250929050565b60008083601f840112612efd57612efc612e82565b5b8235905067ffffffffffffffff811115612f1a57612f19612e87565b5b602083019150836020820283011115612f3657612f35612e8c565b5b9250929050565b60008060008060408587031215612f5757612f56612cc5565b5b600085013567ffffffffffffffff811115612f7557612f74612cca565b5b612f8187828801612e91565b9450945050602085013567ffffffffffffffff811115612fa457612fa3612cca565b5b612fb087828801612ee7565b925092505092959194509250565b6000602082019050612fd36000830184612d8e565b92915050565b6000608082019050612fee6000830187612d3e565b612ffb6020830186612d4d565b6130086040830185612d8e565b6130156060830184612d4d565b95945050505050565b61302781612d7c565b811461303257600080fd5b50565b6000813590506130448161301e565b92915050565b6000602082840312156130605761305f612cc5565b5b600061306e84828501613035565b91505092915050565b600060208201905061308c6000830184612d3e565b92915050565b600080604083850312156130a9576130a8612cc5565b5b60006130b785828601613035565b92505060206130c885828601612cf0565b9150509250929050565b6000806000606084860312156130eb576130ea612cc5565b5b60006130f986828701612cf0565b935050602061310a86828701612cf0565b925050604061311b86828701613035565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061316c57607f821691505b60208210810361317f5761317e613125565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006131bf82612ccf565b91506131ca83612ccf565b92508282019050808211156131e2576131e1613185565b5b92915050565b60006131f382612ccf565b91506000820361320657613205613185565b5b600182039050919050565b600061321c82612ccf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361324e5761324d613185565b5b600182019050919050565b6000819050919050565b6000819050919050565b600061328861328361327e84613259565b613263565b612ccf565b9050919050565b6132988161326d565b82525050565b60006020820190506132b3600083018461328f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212204462c25ea45a0cae5a269fe44b7b2bf1fd4fedcb5231b711e3f86bfcc79d8d4964736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 6237,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "imageHash",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 6239,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 6242,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "standard",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 6244,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 6246,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 6248,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "decimals",
        "offset": 0,
        "slot": "5",
        "type": "t_uint8"
      },
      {
        "astId": 6250,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "totalSupply",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 6253,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "nextPunkIndexToAssign",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 6256,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "allPunksAssigned",
        "offset": 0,
        "slot": "8",
        "type": "t_bool"
      },
      {
        "astId": 6259,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "punksRemainingToAssign",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 6263,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "punkIndexToAddress",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 6267,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "balanceOf",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 6292,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "punksOfferedForSale",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_uint256,t_struct(Offer)6278_storage)"
      },
      {
        "astId": 6297,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "punkBids",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_uint256,t_struct(Bid)6287_storage)"
      },
      {
        "astId": 6301,
        "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
        "label": "pendingWithdrawals",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_struct(Bid)6287_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct CryptoPunksMarket.Bid)",
        "numberOfBytes": "32",
        "value": "t_struct(Bid)6287_storage"
      },
      "t_mapping(t_uint256,t_struct(Offer)6278_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct CryptoPunksMarket.Offer)",
        "numberOfBytes": "32",
        "value": "t_struct(Offer)6278_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Bid)6287_storage": {
        "encoding": "inplace",
        "label": "struct CryptoPunksMarket.Bid",
        "members": [
          {
            "astId": 6280,
            "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
            "label": "hasBid",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 6282,
            "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
            "label": "punkIndex",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 6284,
            "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
            "label": "bidder",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 6286,
            "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
            "label": "value",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Offer)6278_storage": {
        "encoding": "inplace",
        "label": "struct CryptoPunksMarket.Offer",
        "members": [
          {
            "astId": 6269,
            "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
            "label": "isForSale",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 6271,
            "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
            "label": "punkIndex",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 6273,
            "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
            "label": "seller",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 6275,
            "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
            "label": "minValue",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 6277,
            "contract": "src/external/CryptoPunksMarket.sol:CryptoPunksMarket",
            "label": "onlySellTo",
            "offset": 0,
            "slot": "4",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}